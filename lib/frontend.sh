function install_frontend() {
  echo "ðŸ’» Paso 5: Â¡Preparando la parte visual de GestorPlus (el frontend)!"
  echo "Esto es como armar un rompecabezas, Â¡con muchas piezas (paquetes de Node.js)!"
  if [ -d "frontend" ]; then
    cd frontend || {
      echo "Â¡No pude entrar a la carpeta 'frontend'! Â¿El cÃ³digo estÃ¡ completo?"
      exit 1
    }
    echo "Ejecutando npm install para que todo encaje..."
    npm install || {
      echo "Â¡Problemas al instalar las dependencias del frontend! Â¿npm estÃ¡ bien?"
      exit 1
    }

    echo "Â¿Para quÃ© entorno quieres compilar el frontend?"
    echo "  1) Desarrollo (mÃ¡s rÃ¡pido, con mapas de fuente y debugging)"
    echo "  2) ProducciÃ³n (optimizado, minificado, listo para usuarios finales)"
    read -rp "Elige una opciÃ³n (1 o 2): " build_choice

    if [[ "$build_choice" == "1" ]]; then
      echo "No se ejecuta 'npm run start' porque el frontend se levanta con Docker."
      cd ..
      echo "âœ¨ Â¡Listo! El frontend se levantarÃ¡ con Docker en el siguiente paso."
    elif [[ "$build_choice" == "2" ]]; then
      build_cmd="npm run build"
      echo "Ejecutando $build_cmd para compilar el frontend..."
      $build_cmd || {
        echo "Â¡Problemas al compilar el frontend!"
        exit 1
      }
      mkdir -p ../backend/public
      cp -r build/* ../backend/public/ || {
        echo "Â¡No pude copiar los archivos compilados al backend! Â¿Todo bien con las rutas?"
        exit 1
      }
      cd ..
      echo "âœ¨ Â¡El frontend de GestorPlus estÃ¡ listo para producciÃ³n!"
    else
      echo "OpciÃ³n invÃ¡lida. Cancela la compilaciÃ³n del frontend."
      cd ..
      exit 1
    fi
  else
    echo "Â¡No encuentro la carpeta 'frontend'! Â¿Se descargÃ³ todo bien?"
    exit 1
  fi
  pause
}