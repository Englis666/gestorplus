services:
  gestorplus-php:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gestorplus-php
    volumes:
      - ./backend:/var/www/html
      - ./backend/config/.env:/var/www/html/.env
    ports:
      - "9000:9000"
    networks:
      - gestorplus-network
    depends_on:
      - db
      - redis
    environment:
      - TZ=America/Bogota
      - MAIL_HOST=smtp-relay.brevo.com
      - MAIL_PORT=587
      - MAIL_USERNAME=scrimsdiscord2@gmail.com
      - MAIL_PASSWORD=JLANaUHRTcVs3b0t
      - MAIL_FROM=no-reply@gestorplus.com
      - MAIL_FROM_NAME=Gestorplus
    command:
      ["sh", "-c", "until nc -z gestorplus-db 3306; do sleep 1; done; php-fpm"]

  nginx:
    image: nginx:latest
    container_name: gestorplus-nginx
    volumes:
      - ./backend:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - gestorplus-network
    environment:
      - TZ=America/Bogota
    depends_on:
      - gestorplus-php

  db:
    image: mariadb:latest
    container_name: gestorplus-db
    environment:
      MYSQL_ROOT_PASSWORD: "gestorplustfu"
      MYSQL_DATABASE: "gestorplus"
      TZ: America/Bogota
    volumes:
      # Esto es para inicializar la base de datos dependiendo el orden de los archivos
      #- ./bd:/docker-entrypoint-initdb.d
      - ./bd/gestorplus2.sql:/docker-entrypoint-initdb.d/gestorplus2.sql

    # Los puertos no se usan en produccion, solo para desarrollo
    # ya que el contenedor de php se conecta a la base de datos a traves de la red interna
    #
    ports:
      - "3306:3306"
    networks:
      - gestorplus-network

  redis:
    image: redis:alpine
    container_name: gestorplus-redis
    ports:
      - "6379:6379"
    networks:
      - gestorplus-network
    environment:
      - TZ=America/Bogota

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gestorplus-frontend-dev
    command: npm start
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
    ports:
      - "3000:3000"
    networks:
      - gestorplus-network
    depends_on:
      - gestorplus-php
    environment:
      - TZ=America/Bogota
    profiles:
      - dev

  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: gestorplus-frontend-prod
    ports:
      - "80:80"
    networks:
      - gestorplus-network
    profiles:
      - prod

  backend-python:
    build:
      context: ./backend-python
    volumes:
      - ./backend-python/app:/app
      - ./backend-python/app/requirements.txt:/app/requirements.txt
    command: uvicorn main:app --host 0.0.0.0 --port 5000 --reload
    container_name: gestorplus-backend-python
    ports:
      - "5000:5000"
    networks:
      - gestorplus-network
    environment:
      - TZ=America/Bogota

networks:
  gestorplus-network:
    driver: bridge
