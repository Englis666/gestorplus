+------------------------------+
| Tables_in_gestorplus         |
+------------------------------+
| ausencia                     | CRUD
| ausencia_has_notificacion    |
| cargo                        | CRUD
| certificado                  | 
| cita                         | NECESITA CAMBIO A ENTREVISTA
| convocatoria                 | CRUD
| estudio                      | CRUD
| experiencialaboral           | CRUD
| hojadevida                   | CRUD
| horaextra                    |
| jornada                      |
| jornada_has_notificacion     |
| notificacion                 |
| pazysalvo                    |
| postulacion                  |
| postulacion_has_notificacion |
| quejareclamo                 |
| rol                          | CRUD
| sistemadegestion             |
| usuario                      | CRUD 
| vacacion                     |
| vinculacion                  |
+------------------------------+


DELIMITER $$
CREATE PROCEDURE sp_crear_ausencia(
    IN _fechaInicio DATE,
    IN _fechaFin DATE,
    IN _tipoAusencia VARCHAR(45),
    IN _descripcion TEXT,
    IN _justificada TINYINT(4),
    IN _fechaRegistro DATE,
    IN _usuario_num_doc INT(11)
)
BEGIN
    INSERT INTO ausencia (fechaInicio, fechaFin, tipoAusencia, descripcion, justificada, fechaRegistro, usuario_num_doc)
    VALUES (_fechaInicio, _fechaFin, _tipoAusencia, _descripcion, _justificada, _fechaRegistro, _usuario_num_doc);
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_ausencia(
    IN _idausencia INT
)
BEGIN
    SELECT * FROM ausencia
    WHERE idausencia = _idausencia;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_todas_ausencias()
BEGIN
    SELECT * FROM ausencia;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_actualizar_ausencia(
    IN _idausencia INT,
    IN _fechaInicio DATE,
    IN _fechaFin DATE,
    IN _tipoAusencia VARCHAR(45),
    IN _descripcion TEXT,
    IN _justificada TINYINT(4),
    IN _fechaRegistro DATE,
    IN _usuario_num_doc INT(11)
)
BEGIN
    UPDATE ausencia
    SET 
        fechaInicio = _fechaInicio,
        fechaFin = _fechaFin,
        tipoAusencia = _tipoAusencia,
        descripcion = _descripcion,
        justificada = _justificada,
        fechaRegistro = _fechaRegistro,
        usuario_num_doc = _usuario_num_doc
    WHERE idausencia = _idausencia;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_cambiar_estado_ausencia(
    IN _idausencia INT,
    IN _justificada TINYINT(4)
)
BEGIN
    UPDATE ausencia
    SET justificada = _justificada
    WHERE idausencia = _idausencia;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_crear_cargo(
    IN _idcargo INT,
    IN _nombreCargo VARCHAR(45),
    IN _estadoCargo BIT(1)
)
BEGIN
    INSERT INTO cargo (idcargo, nombreCargo, estadoCargo)
    VALUES (_idcargo, _nombreCargo, _estadoCargo);
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_cargo(
    IN _idcargo INT
)
BEGIN
    SELECT * FROM cargo
    WHERE idcargo = _idcargo;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_todos_cargos()
BEGIN
    SELECT * FROM cargo;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_actualizar_cargo(
    IN _idcargo INT,
    IN _nombreCargo VARCHAR(45),
    IN _estadoCargo BIT(1)
)
BEGIN
    UPDATE cargo
    SET 
        nombreCargo = _nombreCargo,
        estadoCargo = _estadoCargo
    WHERE idcargo = _idcargo;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_cambiar_estado_cargo(
    IN _idcargo INT,
    IN _estadoCargo BIT(1)
)
BEGIN
    UPDATE cargo
    SET estadoCargo = _estadoCargo
    WHERE idcargo = _idcargo;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_crear_convocatoria(
    IN _idconvocatoria INT,
    IN _nombreConvocatoria VARCHAR(80),
    IN _descripcion TEXT,
    IN _requisitos TEXT,
    IN _salario DECIMAL(10,2),
    IN _cantidadConvocatoria INT,
    IN _cargo_idcargo INT
)
BEGIN
    INSERT INTO convocatoria (idconvocatoria, nombreConvocatoria, descripcion, requisitos, salario, cantidadConvocatoria, cargo_idcargo)
    VALUES (_idconvocatoria, _nombreConvocatoria, _descripcion, _requisitos, _salario, _cantidadConvocatoria, _cargo_idcargo);
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_convocatoria(
    IN _idconvocatoria INT
)
BEGIN
    SELECT * FROM convocatoria
    WHERE idconvocatoria = _idconvocatoria;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_todas_convocatorias()
BEGIN
    SELECT * FROM convocatoria;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_actualizar_convocatoria(
    IN _idconvocatoria INT,
    IN _nombreConvocatoria VARCHAR(80),
    IN _descripcion TEXT,
    IN _requisitos TEXT,
    IN _salario DECIMAL(10,2),
    IN _cantidadConvocatoria INT,
    IN _cargo_idcargo INT
)
BEGIN
    UPDATE convocatoria
    SET 
        nombreConvocatoria = _nombreConvocatoria,
        descripcion = _descripcion,
        requisitos = _requisitos,
        salario = _salario,
        cantidadConvocatoria = _cantidadConvocatoria,
        cargo_idcargo = _cargo_idcargo
    WHERE idconvocatoria = _idconvocatoria;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_cambiar_estado_convocatoria(
    IN _idconvocatoria INT,
    IN _estado BIT(1)
)
BEGIN
    UPDATE convocatoria
    SET cantidadConvocatoria = IF(_estado = b'1', cantidadConvocatoria, 0)
    WHERE idconvocatoria = _idconvocatoria;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_crear_experienciaLaboral(
    IN _idexperienciaLaboral VARCHAR(45),
    IN _profesion VARCHAR(45),
    IN _descripcionPerfil VARCHAR(45),
    IN _fechaInicioExp DATE,
    IN _fechaFinExp DATE,
    IN _hojadevida_idHojadevida INT
)
BEGIN
    INSERT INTO experienciaLaboral (idexperienciaLaboral, profesion, descripcionPerfil, fechaInicioExp, fechaFinExp, hojadevida_idHojadevida)
    VALUES (_idexperienciaLaboral, _profesion, _descripcionPerfil, _fechaInicioExp, _fechaFinExp, _hojadevida_idHojadevida);
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_experienciaLaboral(
    IN _idexperienciaLaboral VARCHAR(45)
)
BEGIN
    SELECT * FROM experienciaLaboral
    WHERE idexperienciaLaboral = _idexperienciaLaboral;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_todas_experienciasLaborales()
BEGIN
    SELECT * FROM experienciaLaboral;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_actualizar_experienciaLaboral(
    IN _idexperienciaLaboral VARCHAR(45),
    IN _profesion VARCHAR(45),
    IN _descripcionPerfil VARCHAR(45),
    IN _fechaInicioExp DATE,
    IN _fechaFinExp DATE,
    IN _hojadevida_idHojadevida INT
)
BEGIN
    UPDATE experienciaLaboral
    SET 
        profesion = _profesion,
        descripcionPerfil = _descripcionPerfil,
        fechaInicioExp = _fechaInicioExp,
        fechaFinExp = _fechaFinExp,
        hojadevida_idHojadevida = _hojadevida_idHojadevida
    WHERE idexperienciaLaboral = _idexperienciaLaboral;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_cambiar_estado_experienciaLaboral(
    IN _idexperienciaLaboral VARCHAR(45),
    IN _estado BIT(1)
)
BEGIN
    UPDATE experienciaLaboral
    SET fechaFinExp = IF(_estado = b'0', NOW(), fechaFinExp)
    WHERE idexperienciaLaboral = _idexperienciaLaboral;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_crear_experienciaLaboral(
    IN _idexperienciaLaboral VARCHAR(45),
    IN _profesion VARCHAR(45),
    IN _descripcionPerfil VARCHAR(45),
    IN _fechaInicioExp DATE,
    IN _fechaFinExp DATE,
    IN _hojadevida_idHojadevida INT
)
BEGIN
    INSERT INTO experienciaLaboral (idexperienciaLaboral, profesion, descripcionPerfil, fechaInicioExp, fechaFinExp, hojadevida_idHojadevida)
    VALUES (_idexperienciaLaboral, _profesion, _descripcionPerfil, _fechaInicioExp, _fechaFinExp, _hojadevida_idHojadevida);
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_experienciaLaboral(
    IN _idexperienciaLaboral VARCHAR(45)
)
BEGIN
    SELECT * FROM experienciaLaboral
    WHERE idexperienciaLaboral = _idexperienciaLaboral;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_todas_experienciasLaborales()
BEGIN
    SELECT * FROM experienciaLaboral;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_actualizar_experienciaLaboral(
    IN _idexperienciaLaboral VARCHAR(45),
    IN _profesion VARCHAR(45),
    IN _descripcionPerfil VARCHAR(45),
    IN _fechaInicioExp DATE,
    IN _fechaFinExp DATE,
    IN _hojadevida_idHojadevida INT
)
BEGIN
    UPDATE experienciaLaboral
    SET 
        profesion = _profesion,
        descripcionPerfil = _descripcionPerfil,
        fechaInicioExp = _fechaInicioExp,
        fechaFinExp = _fechaFinExp,
        hojadevida_idHojadevida = _hojadevida_idHojadevida
    WHERE idexperienciaLaboral = _idexperienciaLaboral;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_cambiar_estado_experienciaLaboral(
    IN _idexperienciaLaboral VARCHAR(45),
    IN _estado BIT(1)
)
BEGIN
    UPDATE experienciaLaboral
    SET fechaFinExp = IF(_estado = b'0', NOW(), fechaFinExp)
    WHERE idexperienciaLaboral = _idexperienciaLaboral;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_crear_hojadevida(
    IN _fechaNacimiento DATE,
    IN _direccion VARCHAR(45),
    IN _ciudad VARCHAR(45),
    IN _ciudadNacimiento VARCHAR(45),
    IN _telefono VARCHAR(45),
    IN _telefonoFijo VARCHAR(45),
    IN _estadohojadevida BIT(1)
)
BEGIN
    INSERT INTO hojadevida (fechaNacimiento, direccion, ciudad, ciudadNacimiento, telefono, telefonoFijo, estadohojadevida)
    VALUES (_fechaNacimiento, _direccion, _ciudad, _ciudadNacimiento, _telefono, _telefonoFijo, _estadohojadevida);
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_hojadevida(
    IN _idHojadevida INT
)
BEGIN
    SELECT * FROM hojadevida
    WHERE idHojadevida = _idHojadevida;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_todas_hojadevida()
BEGIN
    SELECT * FROM hojadevida;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_actualizar_hojadevida(
    IN _idHojadevida INT,
    IN _fechaNacimiento DATE,
    IN _direccion VARCHAR(45),
    IN _ciudad VARCHAR(45),
    IN _ciudadNacimiento VARCHAR(45),
    IN _telefono VARCHAR(45),
    IN _telefonoFijo VARCHAR(45),
    IN _estadohojadevida BIT(1)
)
BEGIN
    UPDATE hojadevida
    SET 
        fechaNacimiento = _fechaNacimiento,
        direccion = _direccion,
        ciudad = _ciudad,
        ciudadNacimiento = _ciudadNacimiento,
        telefono = _telefono,
        telefonoFijo = _telefonoFijo,
        estadohojadevida = _estadohojadevida
    WHERE idHojadevida = _idHojadevida;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_cambiar_estado_hojadevida(
    IN _idHojadevida INT,
    IN _estado BIT(1)
)
BEGIN
    UPDATE hojadevida
    SET estadohojadevida = _estado
    WHERE idHojadevida = _idHojadevida;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_insertar_usuario (IN _num_doc int(11),IN _nombres varchar(50), IN _apellidos varchar(50), IN _email varchar(45),IN  _tipoDoc varchar(5), IN _password varchar(250))
BEGIN
DECLARE idhv int;
INSERT INTO hojadevida (fechaNacimiento, direccion, ciudad, ciudadNacimiento, telefono, telefonoFijo, estadohojadevida) values(null, null, null, null, null, null, 1);
set idhv = last_insert_id();
INSERT INTO usuario (num_doc, nombres, apellidos, email, tipodDoc, password, estado, hojadevida_idHojadevida, rol_idrol) values (_num_doc, _nombres, _apellidos, _email, _tipoDoc, _password, 1, idhv, 4);
END $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_actualizar_usuario (IN _num_doc INT, IN _nombres VARCHAR(50), IN _apellidos VARCHAR(50), IN _email VARCHAR(45))
BEGIN
UPDATE usuario SET nombres = _nombres, apellidos = _apellidos, email = _email 
WHERE num_doc = _num_doc;
END$$
DELIMITER ; 

DELIMITER $$ 
CREATE PROCEDURE sp_eliminar_usuario(IN _num_doc INT)
BEGIN
UPDATE usuario u, hojadevida hv SET u.estado = 0, hv.estadohojadevida = 0
WHERE u.num_doc = _num_doc AND hv.idHojadevida = u.hojadevida_idHojadevida;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_actualizar_usuario(
    IN _num_doc INT,
    IN _nombres VARCHAR(50),
    IN _apellidos VARCHAR(50),
    IN _email VARCHAR(45),
    IN _tipodDoc VARCHAR(5),
    IN _password VARCHAR(250),
    IN _estado BIT(1),
    IN _hojadevida_idHojadevida INT,
    IN _rol_idrol INT
)
BEGIN
    UPDATE usuario
    SET 
        nombres = _nombres,
        apellidos = _apellidos,
        email = _email,
        tipodDoc = _tipodDoc,
        password = _password,
        estado = _estado,
        hojadevida_idHojadevida = _hojadevida_idHojadevida,
        rol_idrol = _rol_idrol
    WHERE num_doc = _num_doc;
END$$
DELIMITER ;

ROL -----------------------------------------------------------------------------------------------------------------------
DELIMITER $$
CREATE PROCEDURE sp_crear_rol(
    IN _nombreRol VARCHAR(45),
    IN _estadoRol BIT(1)
)
BEGIN
    INSERT INTO rol (nombreRol, estadoRol)
    VALUES (_nombreRol, _estadoRol);
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_rol(
    IN _idrol INT
)
BEGIN
    SELECT * FROM rol
    WHERE idrol = _idrol;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE sp_leer_todos_rol()
BEGIN
    SELECT * FROM rol;
END$$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE actualizar_rol(
    IN _idrol INT,
    IN _nombreRol VARCHAR(45),
    IN _estadoRol BIT(1)
)
BEGIN
    UPDATE rol
    SET 
        nombreRol = _nombreRol,
        estadoRol = _estadoRol
    WHERE idrol = _idrol;
END$$

DELIMITER $$
CREATE PROCEDURE sp_cambiar_estado_rol(
    IN _idrol INT,
    IN _estadoRol BIT(1)
)
BEGIN
    UPDATE rol
    SET estadoRol = _estadoRol
    WHERE idrol = _idrol;
END$$
DELIMITER ;

